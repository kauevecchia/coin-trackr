version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: coin-trackr-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: coin-tracker-pg
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - coin-trackr-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docker -d coin-tracker-pg"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: coin-trackr-backend
    restart: unless-stopped
    ports:
      - "3333:3333"
    environment:
      NODE_ENV: development
      PORT: 3333
      DATABASE_URL: postgresql://docker:docker@localhost:5432/coin-tracker-pg?schema=public
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      COINGECKO_API_KEY: your-coingecko-api-key
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - coin-trackr-network
    command: npm run start:dev

  # Redis (Optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: coin-trackr-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - coin-trackr-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  coin-trackr-network:
    driver: bridge